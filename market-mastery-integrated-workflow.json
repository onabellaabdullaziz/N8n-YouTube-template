{
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "days",
              "minutesInterval": 1,
              "mode": "everyX",
              "value": 1
            }
          ]
        }
      },
      "id": "cc77a6a3-5c34-47bd-9cec-f9d7c3d91571",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "currentStock",
              "value": "={{ [\"AAPL\", \"MSFT\", \"GOOGL\", \"AMZN\", \"TSLA\", \"META\", \"NVDA\", \"JPM\", \"V\", \"WMT\", \"XOM\", \"JNJ\", \"PG\", \"HD\", \"DIS\"][Math.floor(Math.random() * 15)] }}"
            },
            {
              "name": "videoTitle",
              "value": "={{ \"Stock Analysis: Is \" + $json[\"currentStock\"] + \" a BUY? - Market Update \" + $today.format(\"MMM DD, YYYY\") }}"
            },
            {
              "name": "userName",
              "value": "onabellaabdullaziz"
            },
            {
              "name": "currentDate",
              "value": "2025-05-17 21:51:51"
            },
            {
              "name": "weekday",
              "value": "={{ $today.format(\"dddd\") }}"
            },
            {
              "name": "contentType",
              "value": "={{ $json.weekday === \"Monday\" ? \"market_outlook\" : $json.weekday === \"Tuesday\" ? \"technical_analysis\" : $json.weekday === \"Wednesday\" ? \"fundamentals_deep_dive\" : $json.weekday === \"Thursday\" ? \"options_strategy\" : $json.weekday === \"Friday\" ? \"sector_analysis\" : $json.weekday === \"Saturday\" ? \"dividend_analysis\" : \"investing_basics\" }}"
            },
            {
              "name": "channelName",
              "value": "Market Mastery Daily"
            }
          ]
        },
        "options": {}
      },
      "id": "9d55e08e-95f1-4c82-8c13-3ae0c5e93b06",
      "name": "Initialize Variables",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        420,
        300
      ]
    },
    {
      "parameters": {
        "url": "https://api.polygon.io/v2/aggs/ticker/{{$json.currentStock}}/range/1/day/{{$today.subtract(14, 'days').format('YYYY-MM-DD')}}/{{$today.format('YYYY-MM-DD')}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "options": {}
      },
      "id": "3c98d431-95a3-4144-b50a-726dbca7e275",
      "name": "Get Stock Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        600,
        300
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "1",
          "name": "Polygon.io API Key"
        }
      }
    },
    {
      "parameters": {
        "url": "https://www.alphavantage.co/query",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "function",
              "value": "OVERVIEW"
            },
            {
              "name": "symbol",
              "value": "={{$json[\"currentStock\"]}}"
            },
            {
              "name": "apikey",
              "value": "YOUR_ALPHA_VANTAGE_API_KEY"
            }
          ]
        },
        "options": {}
      },
      "id": "b1c2d3e4-f5g6-7h8i-9j0k-l1m2n3o4p5q6",
      "name": "Get Fundamentals",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        600,
        420
      ]
    },
    {
      "parameters": {
        "url": "https://www.alphavantage.co/query",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "function",
              "value": "NEWS_SENTIMENT"
            },
            {
              "name": "tickers",
              "value": "={{$json[\"currentStock\"]}}"
            },
            {
              "name": "limit",
              "value": "5"
            },
            {
              "name": "apikey",
              "value": "YOUR_ALPHA_VANTAGE_API_KEY"
            }
          ]
        },
        "options": {}
      },
      "id": "c7d8e9f0-g1h2-i3j4-k5l6-m7n8o9p0q1r2",
      "name": "Get News",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        600,
        540
      ]
    },
    {
      "parameters": {
        "url": "https://api.polygon.io/v3/reference/tickers/{{$json.currentStock}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "options": {}
      },
      "id": "d8e9f0g1-h2i3-j4k5-l6m7-n8o9p0q1r2s3",
      "name": "Get Company Info",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        600,
        660
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "1",
          "name": "Polygon.io API Key"
        }
      }
    },
    {
      "parameters": {
        "chatId": "YOUR_CHAT_ID",
        "prompt": "={{ \"Create a professional, data-driven script for a \" + $json.contentType + \" video about \" + $json.currentStock + \" stock for the \" + $json.channelName + \" YouTube channel. Include the following data points:\\n\\nStock price: $\" + $json.stockPrice + \"\\nPrice change: \" + $json.priceChangePercent + \"% over past 2 weeks\\nCompany: \" + $json.companyName + \"\\nSector: \" + $json.sector + \"\\nPE Ratio: \" + $json.peRatio + \"\\nDividend Yield: \" + $json.dividendYield + \"%\\nMarket Cap: \" + $json.marketCap + \"\\n\\nRecent News: \\n\" + $json.newsHeadlines.map((headline, index) => (index + 1) + \". \" + headline).join(\"\\n\") + \"\\n\\nToday is \" + $json.weekday + \", so this is our weekly \" + $json.contentType.replace(\"_\", \" \") + \" video.\\n\\nThe script should:  \\n1. Have a compelling intro that hooks viewers within the first 15 seconds  \\n2. Include specific price levels (support/resistance)  \\n3. Cover fundamental analysis using the provided data  \\n4. Discuss recent news and its impact  \\n5. Provide a clear BUY/SELL/HOLD recommendation with price targets  \\n6. End with a call to action promoting both our FREE stock analysis spreadsheet and our premium digital products (Weekly Market Mastery Report for $9.99/month, Stock Analysis Master Spreadsheet for $29, Market Mastery Indicator Suite for $49, Sector Rotation Blueprint for $79, Options Income Mastery Course for $199, or Market Mastery Pro Membership for $29/month)\\n\\nBe sure to mention the digital product most relevant to this content type: \" + ($json.contentType === \"market_outlook\" ? \"Weekly Market Mastery Report\" : $json.contentType === \"technical_analysis\" ? \"Market Mastery Indicator Suite\" : $json.contentType === \"options_strategy\" ? \"Options Income Mastery Course\" : $json.contentType === \"sector_analysis\" ? \"Sector Rotation Blueprint\" : $json.contentType === \"fundamentals_deep_dive\" ? \"Stock Analysis Master Spreadsheet\" : \"Market Mastery Pro Membership\") + \".\\n\\nFormat the response as a complete video script with clear section headers. Keep the tone professional but engaging with occasional emphasis on profit potential. The target audience is intermediate investors who want actionable insights. Include some technical jargon but explain complex concepts.\\n\\nScript length should be approximately 1000-1200 words (about 8-10 minutes when narrated).\" }}",
        "options": {
          "baseURL": "https://api.openai.com"
        }
      },
      "id": "s0t1u2v3-w4x5-y6z7-a8b9-c0d1e2f3g4h5",
      "name": "Generate AI Script",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        960,
        300
      ],
      "credentials": {
        "openAiApi": {
          "id": "2",
          "name": "OpenAI account"
        }
      }
    },
    {
      "parameters": {
        "prompt": "={{ \"Create a professional YouTube thumbnail for the \" + $json.channelName + \" channel featuring a \" + $json.contentType.replace(\"_\", \" \") + \" video about \" + $json.currentStock + \" stock. The thumbnail should include:\\n\\n1. The stock ticker symbol \" + $json.currentStock + \" prominently displayed\\n2. A \" + ($json.priceChangePercent > 0 ? \"green upward\" : \"red downward\") + \" arrow showing price direction\\n3. The text '\" + ($json.priceChangePercent > 0 ? \"BUY NOW?\" : \"SELL NOW?\") + \"' in bold, attention-grabbing font\\n4. A clean chart or graph element showing \" + ($json.priceChangePercent > 0 ? \"upward\" : \"downward\") + \" trend\\n5. Dollar signs or money imagery\\n6. Professional financial color scheme (blue, green, grey)\\n7. Add the company logo subtly in a corner\\n8. Include a small 'Market Mastery Daily' brand element\\n\\nThe style should be clean, professional, and eye-catching - designed for financial content. Make it look like a high-quality stock market YouTube channel thumbnail that will get high click-through rates. Ensure it's clearly readable when displayed as a small thumbnail.\" }}",
        "additionalParameters": {
          "parameters": [
            {
              "name": "size",
              "value": "1280x720"
            },
            {
              "name": "quality",
              "value": "hd"
            },
            {
              "name": "model",
              "value": "dall-e-3"
            }
          ]
        },
        "options": {
          "responseFormat": "url"
        }
      },
      "id": "d4e1f9bb-3456-4cd3-81d7-f6a50f66e9a7",
      "name": "Generate Thumbnail",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        960,
        440
      ],
      "credentials": {
        "openAiApi": {
          "id": "2",
          "name": "OpenAI account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.elevenlabs.io/v1/text-to-speech/{{ $json.contentType === \"market_outlook\" || $json.contentType === \"investing_basics\" ? \"pNInz6obpgDQGcFmaJgB\" : $json.contentType === \"technical_analysis\" || $json.contentType === \"options_strategy\" ? \"ErXwobaYiN019PkySvjV\" : \"MF3mGyEYCl7XYWbV9V6O\" }}",
        "method": "POST",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "YOUR_ELEVENLABS_API_KEY"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyContent": "{\n  \"text\": \"{{ $json.scriptContent }}\",\n  \"model_id\": \"eleven_monolingual_v1\",\n  \"voice_settings\": {\n    \"stability\": 0.5,\n    \"similarity_boost\": 0.75,\n    \"style\": 0.0,\n    \"use_speaker_boost\": true,\n    \"speaking_rate\": {{ $json.contentType === \"technical_analysis\" ? 1.15 : 1.05 }}\n  }\n}",
        "options": {
          "response": {
            "responseFormat": "file",
            "outputPropertyName": "voiceoverAudio"
          }
        }
      },
      "id": "3a8d4b16-9f68-4782-9ada-d4a8e28a3f6f",
      "name": "Generate Voiceover",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1140,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "3",
          "name": "ElevenLabs API"
        }
      }
    },
    {
      "parameters": {
        "mode": "mergeByPosition",
        "joinMode": "keepKeyMatches",
        "options": {}
      },
      "id": "d5e6f7g8-h9i0-j1k2-l3m4-n5o6p7q8r9s0",
      "name": "Merge All Data",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        780,
        540
      ]
    },
    {
      "parameters": {
        "functionCode": "// Prepare data for content generation\nconst data = $input.item.json;\n\n// Process stock price data\nconst stockData = data.results || [];\nconst currentPrice = stockData.length > 0 ? stockData[stockData.length - 1].c : 0;\nconst twoWeeksAgoPrice = stockData.length > 10 ? stockData[0].c : currentPrice;\nconst priceChange = currentPrice - twoWeeksAgoPrice;\nconst priceChangePercent = (priceChange / twoWeeksAgoPrice * 100).toFixed(2);\n\n// Process fundamental data\nconst fundamentals = data.json || {};\nconst peRatio = fundamentals.PERatio || 'N/A';\nconst dividendYield = fundamentals.DividendYield || '0';\nconst marketCap = fundamentals.MarketCapitalization || 'N/A';\nconst sector = fundamentals.Sector || 'Technology';\n\n// Process news data\nconst newsData = data.feed || [];\nconst newsHeadlines = newsData.slice(0, 5).map(item => item.title || 'No headline');\n\n// Process company data\nconst companyData = data.results || {};\nconst companyName = companyData.name || data.currentStock;\nconst logoUrl = `https://logo.clearbit.com/${companyData.homepage_url?.replace('https://', '').replace('http://', '').split('/')[0]}`;\n\n// Determine market trend\nconst marketTrend = priceChange >= 0 ? 'bullish' : 'bearish';\n\n// Create custom recommendation based on multiple factors\nlet stockRecommendation = 'HOLD';\nif (priceChangePercent > 5) stockRecommendation = 'STRONG BUY';\nelse if (priceChangePercent > 0) stockRecommendation = 'BUY';\nelse if (priceChangePercent < -5) stockRecommendation = 'SELL';\nelse if (priceChangePercent < 0) stockRecommendation = 'HOLD';\n\n// Calculate key support and resistance levels\nconst pricePoints = stockData.map(item => item.c);\nconst maxPrice = Math.max(...pricePoints);\nconst minPrice = Math.min(...pricePoints);\nconst resistanceLevel = (maxPrice * 1.02).toFixed(2); // 2% above max\nconst supportLevel = (minPrice * 0.98).toFixed(2); // 2% below min\n\n// Calculate RSI (simple implementation)\nlet rsi = 50; // Default neutral\nif (pricePoints.length > 5) {\n  let gains = 0, losses = 0;\n  for (let i = 1; i < pricePoints.length; i++) {\n    const change = pricePoints[i] - pricePoints[i-1];\n    if (change > 0) gains += change;\n    else losses -= change; // Make positive for calculation\n  }\n  \n  if (gains + losses > 0) {\n    const relativeStrength = gains / (losses || 1); // Avoid division by 0\n    rsi = 100 - (100 / (1 + relativeStrength));\n  }\n}\n\n// Generate keywords based on stock and content type\nconst baseKeywords = ['Stock Analysis', data.currentStock, 'Stock Market', 'Investing'];\nconst contentTypeKeywords = {\n  'market_outlook': ['Market Trends', 'Economic Outlook', 'Market Analysis'],\n  'technical_analysis': ['Chart Patterns', 'Technical Indicators', 'Stock Charts'],\n  'fundamentals_deep_dive': ['Fundamental Analysis', 'Financial Statements', 'Company Analysis'],\n  'options_strategy': ['Options Trading', 'Call Options', 'Put Options', 'Options Strategy'],\n  'sector_analysis': ['Sector Trends', 'Industry Analysis', data.sector],\n  'dividend_analysis': ['Dividend Stocks', 'Passive Income', 'Dividend Yield'],\n  'investing_basics': ['Investing for Beginners', 'Stock Market Basics', 'How to Invest']\n};\n\nconst keywords = [\n  ...baseKeywords,\n  ...contentTypeKeywords[data.contentType] || [],\n  marketTrend,\n  stockRecommendation,\n  data.companyName || data.currentStock\n];\n\n// Match digital products to content type\nconst digitalProducts = {\n  'market_outlook': {\n    primary: {\n      name: 'Weekly Market Mastery Report',\n      price: 9.99,\n      url: 'https://marketmasterydaily.com/weekly-report'\n    }\n  },\n  'technical_analysis': {\n    primary: {\n      name: 'Market Mastery Indicator Suite',\n      price: 49,\n      url: 'https://marketmasterydaily.com/indicators'\n    }\n  },\n  'fundamentals_deep_dive': {\n    primary: {\n      name: 'Stock Analysis Master Spreadsheet',\n      price: 29,\n      url: 'https://marketmasterydaily.com/spreadsheet'\n    }\n  },\n  'options_strategy': {\n    primary: {\n      name: 'Options Income Mastery Course',\n      price: 199,\n      url: 'https://marketmasterydaily.com/options-course'\n    }\n  },\n  'sector_analysis': {\n    primary: {\n      name: 'Sector Rotation Blueprint',\n      price: 79,\n      url: 'https://marketmasterydaily.com/sector-blueprint'\n    }\n  },\n  'dividend_analysis': {\n    primary: {\n      name: 'Dividend Growth Portfolio Builder',\n      price: 39,\n      url: 'https://marketmasterydaily.com/dividend-builder'\n    }\n  },\n  'investing_basics': {\n    primary: {\n      name: 'Market Mastery Pro Membership',\n      price: 29,\n      url: 'https://marketmasterydaily.com/membership'\n    }\n  }\n};\n\nconst primaryProduct = digitalProducts[data.contentType]?.primary || digitalProducts['market_outlook'].primary;\n\nreturn {\n  ...data,\n  stockPrice: currentPrice.toFixed(2),\n  priceChange: priceChange.toFixed(2),\n  priceChangePercent,\n  peRatio,\n  dividendYield,\n  marketCap,\n  sector,\n  newsHeadlines,\n  marketTrend,\n  stockRecommendation,\n  chartColor: priceChangePercent > 0 ? 'green' : 'red',\n  companyName,\n  logoUrl,\n  resistanceLevel,\n  supportLevel,\n  rsi: rsi.toFixed(1),\n  keywords,\n  videoCategories: ['stock_analysis', data.contentType, data.currentStock],\n  contentGroup: data.contentType,\n  videoId: `${data.currentStock.toLowerCase()}_${data.contentType}_${Date.now()}`,\n  primaryProduct,\n  recordTimestamp: '2025-05-17 21:51:51'\n};"
      },
      "id": "r1s2t3u4-v5w6-x7y8-z9a0-b1c2d3e4f5g6",
      "name": "Process Financial Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        780,
        300
      ]
    },
    {
      "parameters": {
        "url": "https://api.opus.pro/v1/videos",
        "method": "POST",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_OPUS_API_KEY"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyContent": "{\n  \"title\": \"{{ $json.videoTitle }}\",\n  \"references\": [\n    {\n      \"url\": \"https://www.tradingview.com/chart/?symbol={{ $json.currentStock }}\",\n      \"include_as_reference\": true\n    }\n  ],\n  \"background_music\": \"{{ $json.contentType === 'market_outlook' ? 'upbeat' : $json.contentType === 'technical_analysis' ? 'electronic' : $json.contentType === 'options_strategy' ? 'intense' : 'corporate' }}\",\n  \"aspect_ratio\": \"landscape\",\n  \"input_type\": \"script\",\n  \"script\": \"{{ $json.scriptContent }}\",\n  \"watermark\": false,\n  \"style\": \"{{ $json.contentType === 'technical_analysis' ? 'modern' : $json.contentType === 'investing_basics' ? 'educational' : 'professional' }}\"\n}",
        "sendBinaryData": true,
        "binaryPropertyName": "{{ $json.voiceoverAudio }}",
        "options": {
          "response": {
            "fullResponse": true,
            "responseFormat": "json",
            "outputPropertyName": "videoResponse"
          }
        }
      },
      "id": "t5u6v7w8-x9y0-z1a2-b3c4-d5e6f7g8h9i0",
      "name": "Create Video with Opus",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1320,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "4",
          "name": "Opus API"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Generate Affiliate Links & Digital Product Links Based on Content Type and Stock\nconst data = $input.item.json;\nconst contentType = data.contentType;\nconst stockTicker = data.currentStock;\nconst stockPrice = parseFloat(data.stockPrice);\nconst stockSector = data.sector;\n\n// Define primary affiliate product based on content type\nconst contentTypeAffiliates = {\n  'market_outlook': {\n    productName: 'TradingView Premium',\n    affiliateLink: 'https://tradingview.go2cloud.org/SH3vw',\n    couponCode: 'MARKET15',\n    description: 'I use TradingView Premium for all my market analysis'\n  },\n  'technical_analysis': {\n    productName: 'TradingView Premium',\n    affiliateLink: 'https://tradingview.go2cloud.org/SH3vw',\n    couponCode: 'TECHNICAL20',\n    description: 'Access professional technical indicators with TradingView Premium'\n  },\n  'fundamentals_deep_dive': {\n    productName: 'Stock Advisor by Motley Fool',\n    affiliateLink: 'https://www.fool.com/mms/mark/sa-affiliate',\n    couponCode: 'FUNDAMENTAL50',\n    description: 'Get top stock picks with strong fundamentals from Stock Advisor'\n  },\n  'options_strategy': {\n    productName: 'Options Alpha Membership',\n    affiliateLink: 'https://optionalpha.com/member/pricing?affcode=1234',\n    couponCode: 'OPTIONS25',\n    description: 'Learn proven options strategies with Options Alpha'\n  },\n  'sector_analysis': {\n    productName: 'Seeking Alpha Premium',\n    affiliateLink: 'https://seekingalpha.com/subscription/checkout?slug=premium-annual&promo_code=SECTOR',\n    couponCode: 'SECTOR20',\n    description: 'Get in-depth sector analysis with Seeking Alpha Premium'\n  },\n  'dividend_analysis': {\n    productName: 'Simply Safe Dividends',\n    affiliateLink: 'https://www.simplysafedividends.com/intelligence/join?affiliate=123',\n    couponCode: 'DIVIDEND10',\n    description: 'Track and analyze dividend stocks with Simply Safe Dividends'\n  },\n  'investing_basics': {\n    productName: 'Udemy Investing Course',\n    affiliateLink: 'https://www.udemy.com/course/stock-market-investing/?couponCode=BASICS&referralCode=123',\n    couponCode: 'BASICS20',\n    description: 'Learn stock investing from scratch with this comprehensive course'\n  }\n};\n\n// Define secondary affiliate product based on stock price range\nlet secondaryProduct = {\n  productName: 'Webull Trading',\n  affiliateLink: 'https://act.webull.com/mo/9tzv6XtBpAts/dei/inviteUs/',\n  couponCode: 'FREESTOCKS',\n  description: 'Get free stocks when you open an account with Webull'\n};\n\n// Personalize secondary product based on stock price\nif (stockPrice < 50) {\n  secondaryProduct = {\n    productName: 'Robinhood',\n    affiliateLink: 'https://join.robinhood.com/onabela',\n    couponCode: 'FREESHARE',\n    description: 'Perfect for buying fractional shares of low-priced stocks'\n  };\n} else if (stockPrice > 500) {\n  secondaryProduct = {\n    productName: 'M1 Finance',\n    affiliateLink: 'https://m1.finance/onabella',\n    couponCode: 'HIGHVALUE',\n    description: 'Ideal for creating a pie of high-value stocks'\n  };\n}\n\n// Tertiary product based on sector\nconst sectorProducts = {\n  'Technology': {\n    productName: 'Tech Stock Investor Newsletter',\n    affiliateLink: 'https://techstocks.investor/onabellaref',\n    couponCode: 'TECH10',\n    description: 'Weekly insights on the best tech stocks to buy'\n  },\n  'Healthcare': {\n    productName: 'Healthcare Sector ETF Guide',\n    affiliateLink: 'https://healthcare.investing/affiliate',\n    couponCode: 'HEALTH15',\n    description: 'Complete analysis of healthcare sector ETFs'\n  },\n  'Financial': {\n    productName: 'Bank Stock Analysis Tool',\n    affiliateLink: 'https://bankstocks.analysis/ref',\n    couponCode: 'FINANCE20',\n    description: 'Compare financial metrics across banking stocks'\n  },\n  'Consumer': {\n    productName: 'Consumer Trends Report',\n    affiliateLink: 'https://consumer.trends/affiliate',\n    couponCode: 'RETAIL10',\n    description: 'Stay ahead of consumer spending patterns'\n  }\n};\n\nconst tertiaryProduct = sectorProducts[stockSector] || {\n  productName: 'Stock Analysis Pro',\n  affiliateLink: 'https://stockanalysis.com/pro/?ref=onabellaabdullaziz',\n  couponCode: 'ANALYSIS10',\n  description: 'Comprehensive stock screening and analysis tools'\n};\n\n// Create A/B testing variation for description\nconst isVariationA = Math.random() > 0.5;\n\n// Primary product is based on content type\nconst primaryAffiliate = contentTypeAffiliates[contentType] || contentTypeAffiliates['market_outlook'];\n\n// Create enhanced description with affiliate links and digital product promotion\nconst recommendedProduct = data.primaryProduct;\nconst digitalProductLink = `\\n\\n📚 RECOMMENDED PRODUCT: ${recommendedProduct.name} ($${recommendedProduct.price})\\n→ Get it here: ${recommendedProduct.url}\\n→ Perfect for: ${contentType.replace(\"_\", \" \")} enthusiasts who want to take their analysis to the next level.`;\n\nconst toolsSection = isVariationA ?\n  `🔎 TOOLS I USE:\\n → ${primaryAffiliate.productName}: ${primaryAffiliate.affiliateLink} (Use code: ${primaryAffiliate.couponCode} for discount) - ${primaryAffiliate.description}\\n → ${secondaryProduct.productName}: ${secondaryProduct.affiliateLink} (Code: ${secondaryProduct.couponCode}) - ${secondaryProduct.description}\\n → FREE Stock Analysis Spreadsheet: https://marketmasterydaily.com/free-spreadsheet` :\n  `🔎 MY RECOMMENDED TOOLS:\\n → ${primaryAffiliate.productName}: ${primaryAffiliate.affiliateLink} (DISCOUNT CODE: ${primaryAffiliate.couponCode}) - ${primaryAffiliate.description}\\n → ${tertiaryProduct.productName}: ${tertiaryProduct.affiliateLink} (SAVE WITH: ${tertiaryProduct.couponCode}) - ${tertiaryProduct.description}\\n → FREE Stock Analysis Template: https://marketmasterydaily.com/free-template`;\n\nconst descriptionWithAffiliates = `🔥 STOCK ANALYSIS: ${data.currentStock} - Is it a ${data.stockRecommendation} Right Now? 📊\\n\\nIn this ${data.contentType.replace(\"_\", \" \")} video, we cover:\\n✅ Technical Analysis (Support: $${data.supportLevel} | Resistance: $${data.resistanceLevel})\\n✅ RSI: ${data.rsi} (${data.rsi > 70 ? \"Overbought\" : data.rsi < 30 ? \"Oversold\" : \"Neutral\"})\\n✅ Price Targets\\n✅ Recent News Impact\\n✅ Our ${data.stockRecommendation} Recommendation\\n\\nKey Data:\\n- Current Price: $${data.stockPrice}\\n- Recent Change: ${data.priceChangePercent}%\\n- P/E Ratio: ${data.peRatio}\\n- Dividend Yield: ${data.dividendYield}%\\n- Market Cap: ${data.marketCap}\\n\\n⏱️ TIMESTAMPS:\\n00:00 Introduction\\n01:15 Price Analysis\\n03:20 Technical Indicators\\n05:40 Fundamental Analysis\\n07:30 News Impact\\n09:20 Final Recommendation${digitalProductLink}\\n\\n${toolsSection}\\n\\n» Subscribe for daily stock market analysis: https://youtube.com/c/${data.channelName.replace(\" \", \"\")}?sub_confirmation=1\\n» Join our Discord Community: https://discord.gg/marketmasterydaily\\n\\n📈 Premium Membership (First Week FREE):\\nhttps://marketmasterydaily.com/membership\\n\\n#StockMarket #${data.currentStock} #Investing #${data.stockRecommendation.replace(\" \", \"\")} #${data.contentType.replace(\"_\", \"\")}\\n\\nDISCLAIMER: This content is for educational purposes only. This is not financial advice. Always do your own research before investing.`;\n\nreturn {\n  ...data,\n  enhancedDescription: descriptionWithAffiliates,\n  primaryAffiliate: primaryAffiliate.productName,\n  primaryAffiliateLink: primaryAffiliate.affiliateLink,\n  primaryAffiliateCoupon: primaryAffiliate.couponCode,\n  secondaryProduct: secondaryProduct.productName,\n  secondaryLink: secondaryProduct.affiliateLink,\n  secondaryCoupon: secondaryProduct.couponCode,\n  tertiaryProduct: tertiaryProduct.productName,\n  tertiaryLink: tertiaryProduct.affiliateLink,\n  tertiaryCoupon: tertiaryProduct.couponCode,\n  descriptionVariation: isVariationA ? 'A' : 'B',\n  trackingId: `${data.contentType}_${data.currentStock}_${Date.now()}`\n};"
      },
      "id": "q9r0s1t2-u3v4-w5x6-y7z8-a9b0c1d2e3f4",
      "name": "Prepare Product Links",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1320,
        420
      ]
    },
    {
      "parameters": {
        "resource": "video",
        "title": "={{ $json.videoTitle }}",
        "description": "={{ $json.enhancedDescription }}",
        "categoryId": "22",
        "videoOptions": {
          "tags": "={{ $json.keywords.join(\",\") }}",
          "privacyStatus": "public",
          "madeForKids": false,
          "notifySubscribers": true,
          "selfDeclaredMadeForKids": false
        },
        "localVideo": "={{ $json.videoUrl }}",
        "localThumbnail": "={{ $json.thumbnailUrl }}"
      },
      "id": "5a91b29e-cd68-4ef3-b0b2-2b9f8ace0d8a",
      "name": "Upload to YouTube",
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        1500,
        300
      ],
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "5",
          "name": "YouTube account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.twitter.com/2/tweets",
        "method": "POST",
        "authentication": "oAuth2",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyContent": "{\n  \"text\": \"🔥 NEW VIDEO: \" + $json.currentStock + \" \" + $json.contentType.replace('_', ' ') + \" 📊\\n\\nCurrent Price: $\" + $json.stockPrice + \"\\nOur Verdict: \" + $json.stockRecommendation + \" 🔍\\n\\n\" + ($json.priceChangePercent > 0 ? '📈 UP ' : '📉 DOWN ') + Math.abs($json.priceChangePercent) + \"% - Check out our analysis with price targets!\\n\\n\" + $json.youTubeVideoUrl + \"\\n\\n#Investing #\" + $json.currentStock + \" #StockMarket\"\n}",
        "options": {
          "response": {
            "responseFormat": "json",
            "outputPropertyName": "twitterResponse"
          }
        }
      },
      "id": "j1k2l3m4-n5o6-p7q8-r9s0-t1u2v3w4x5y6",
      "name": "Twitter Post",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1680,
        200
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "6",
          "name": "Twitter OAuth2 API"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "method": "POST",
        "authentication": "oAuth2",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-Restli-Protocol-Version",
              "value": "2.0.0"
            }
          ]
        },
        "sendBody": true,
        "bodyContent": "{\n  \"author\": \"urn:li:person:{{ YOUR_LINKEDIN_ID }}\",\n  \"lifecycleState\": \"PUBLISHED\",\n  \"specificContent\": {\n    \"com.linkedin.ugc.ShareContent\": {\n      \"shareCommentary\": {\n        \"text\": \"📊 {{ $json.contentType.replace('_', ' ').toUpperCase() }}: Is {{ $json.currentStock }} ({{ $json.companyName }}) a good investment?\\n\\nI just published my latest financial analysis on {{ $json.channelName }}, where I break down:\\n\\n- Technical indicators (RSI: {{ $json.rsi }})\\n- Support level: ${{ $json.supportLevel }}\\n- Resistance level: ${{ $json.resistanceLevel }}\\n- Recent performance: {{ ($json.priceChangePercent > 0 ? '+' : '') + $json.priceChangePercent }}%\\n- Our recommendation: {{ $json.stockRecommendation }}\\n\\nThis {{ $json.weekday }} analysis is part of our weekly {{ $json.contentType.replace('_', ' ') }} series, providing actionable insights for investors.\\n\\nWatch the full analysis here: {{ $json.youTubeVideoUrl }}\\n\\n#StockMarket #Investing #FinancialEducation #{{ $json.currentStock }}\"\n      },\n      \"shareMediaCategory\": \"ARTICLE\",\n      \"media\": [\n        {\n          \"status\": \"READY\",\n          \"description\": {\n            \"text\": \"Stock Analysis for {{ $json.currentStock }}\"\n          },\n          \"originalUrl\": \"{{ $json.youTubeVideoUrl }}\",\n          \"title\": {\n            \"text\": \"{{ $json.videoTitle }}\"\n          }\n        }\n      ]\n    }\n  },\n  \"visibility\": {\n    \"com.linkedin.ugc.MemberNetworkVisibility\": \"PUBLIC\"\n  }\n}",
        "options": {
          "response": {
            "responseFormat": "json",
            "outputPropertyName": "linkedinResponse"
          }
        }
      },
      "id": "k9l0m1n2-o3p4-q5r6-s7t8-u9v0w1x2y3z4",
      "name": "LinkedIn Post",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1680,
        300
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "7",
          "name": "LinkedIn OAuth2 API"
        }
      }
    },
    {
      "parameters": {
        "url": "https://oauth.reddit.com/api/submit",
        "method": "POST",
        "authentication": "oAuth2",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "name": "User-Agent",
              "value": "MarketMasteryBot/1.0 by {{ $json.userName }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form",
        "bodyParameters": {
          "parameters": [
            {
              "name": "title",
              "value": "={{ $json.contentType.replace(\"_\", \" \").toUpperCase() + \": \" + $json.currentStock + \" \" + ($json.priceChangePercent > 0 ? \"UP \" : \"DOWN \") + Math.abs($json.priceChangePercent) + \"% - \" + $json.stockRecommendation + \"?\" }}"
            },
            {
              "name": "text",
              "value": "={{ \"Hey r/\" + ($json.contentType === \"options_strategy\" ? \"options\" : $json.contentType === \"dividend_analysis\" ? \"dividends\" : $json.contentType === \"investing_basics\" ? \"investing_discussion\" : \"investing\") + \",\\n\\nI just published an in-depth \" + $json.contentType.replace(\"_\", \" \") + \" of \" + $json.currentStock + \" stock on my channel \\\"\" + $json.channelName + \"\\\". Here's a summary of key findings:\\n\\n**Company:** \" + $json.companyName + \"  \\n**Sector:** \" + $json.sector + \"  \\n**Current Price:** $\" + $json.stockPrice + \"  \\n**Price Change:** \" + ($json.priceChangePercent > 0 ? \"+\" : \"\") + $json.priceChangePercent + \"%  \\n**P/E Ratio:** \" + $json.peRatio + \"  \\n**RSI:** \" + $json.rsi + \"  \\n**Support Level:** $\" + $json.supportLevel + \"  \\n**Resistance Level:** $\" + $json.resistanceLevel + \"  \\n\\n**Technical Analysis:**  \\n\" + ($json.rsi > 70 ? \"The stock is currently overbought with RSI at \" + $json.rsi : $json.rsi < 30 ? \"The stock is currently oversold with RSI at \" + $json.rsi : \"RSI is neutral at \" + $json.rsi + \", showing balanced momentum\") + \". Price action shows \" + $json.marketTrend + \" momentum with key resistance at $\" + $json.resistanceLevel + \".\\n\\n**Recent News:**  \\n\" + $json.newsHeadlines[0] + \"\\n\\n**Our Recommendation: \" + $json.stockRecommendation + \"**\\n\\nMy full analysis with price targets and detailed charts is available here: \" + $json.youTubeVideoUrl + \"\\n\\nI also created a \" + $json.primaryProduct.name + \" ($\" + $json.primaryProduct.price + \") for those who want to take their analysis to the next level.\\n\\nWhat's your take on \" + $json.currentStock + \" right now?\" }}"
            },
            {
              "name": "sr",
              "value": "={{ $json.contentType === \"options_strategy\" ? \"options\" : $json.contentType === \"dividend_analysis\" ? \"dividends\" : $json.contentType === \"investing_basics\" ? \"investing_discussion\" : \"investing\" }}"
            },
            {
              "name": "kind",
              "value": "self"
            },
            {
              "name": "api_type",
              "value": "json"
            }
          ]
        },
        "options": {
          "response": {
            "responseFormat": "json",
            "outputPropertyName": "redditResponse"
          }
        }
      },
      "id": "a5b6c7d8-e9f0-g1h2-i3j4-k5l6m7n8o9p0",
      "name": "Reddit Post",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1680,
        400
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "8",
          "name": "Reddit OAuth2 API"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Stock",
              "value": "={{ $json.currentStock }}"
            },
            {
              "name": "Date",
              "value": "={{ \"2025-05-17\" }}"
            },
            {
              "name": "Video Title",
              "value": "={{ $json.videoTitle }}"
            },
            {
              "name": "YouTube URL",
              "value": "={{ $json.youTubeVideoUrl }}"
            },
            {
              "name": "Content Type",
              "value": "={{ $json.contentType }}"
            },
            {
              "name": "Recommendation",
              "value": "={{ $json.stockRecommendation }}"
            },
            {
              "name": "Video ID",
              "value": "={{ $json.videoId }}"
            },
            {
              "name": "Stock Price",
              "value": "={{ $json.stockPrice }}"
            },
            {
              "name": "Price Change %",
              "value": "={{ $json.priceChangePercent }}"
            },
            {
              "name": "Support Level",
              "value": "={{ $json.supportLevel }}"
            },
            {
              "name": "Resistance Level",
              "value": "={{ $json.resistanceLevel }}"
            },
            {
              "name": "RSI",
              "value": "={{ $json.rsi }}"
            },
            {
              "name": "Primary Product",
              "value": "={{ $json.primaryProduct.name }}"
            },
            {
              "name": "Primary Affiliate",
              "value": "={{ $json.primaryAffiliate }}"
            },
            {
              "name": "Description Variation",
              "value": "={{ $json.descriptionVariation }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a3b4c5d6-e7f8-g9h0-i1j2-k3l4m5n6o7p8",
      "name": "Track Content in Airtable",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 1,
      "position": [
        1860,
        300
      ],
      "credentials": {
        "airtableApi": {
          "id": "9",
          "name": "Airtable account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "days",
              "minutesInterval": 1,
              "mode": "everyX",
              "value": 7
            }
          ]
        }
      },
      "id": "weekly-product-trigger",
      "name": "Weekly Product Generator",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        240,
        840
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "selectFields": {
          "fields": [
            "Stock",
            "Video Title",
            "YouTube URL",
            "Content Type",
            "Recommendation",
            "Stock Price",
            "Support Level",
            "Resistance Level",
            "RSI",
            "Date"
          ]
        },
        "additionalOptions": {
          "sort": [
            {
              "field": "Date",
              "direction": "desc"
            }
          ],
          "filterByFormula": "IS_AFTER({Date}, DATEADD(TODAY(), -7, 'days'))"
        }
      },
      "id": "weekly-airtable-fetch",
      "name": "Get Weekly Videos Data",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 1,
      "position": [
        420,
        840
      ],
      "credentials": {
        "airtableApi": {
          "id": "9",
          "name": "Airtable account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Process weekly video data into digital product\nconst videos = $input.all().map(i => i.json);\n\n// Group by content type\nconst contentTypes = {\n  market_outlook: [],\n  technical_analysis: [],\n  fundamentals_deep_dive: [],\n  options_strategy: [],\n  sector_analysis: [],\n  dividend_analysis: [],\n  investing_basics: []\n};\n\nvideos.forEach(video => {\n  const contentType = video['Content Type'] || 'market_outlook';\n  if (contentTypes[contentType]) {\n    contentTypes[contentType].push(video);\n  }\n});\n\n// Get top picks\nconst allStocks = {};\nvideos.forEach(video => {\n  const stock = video['Stock'];\n  if (!allStocks[stock]) {\n    allStocks[stock] = {\n      ticker: stock,\n      count: 0,\n      lastPrice: parseFloat(video['Stock Price']) || 0,\n      recommendation: video['Recommendation'] || 'HOLD',\n      rsi: parseFloat(video['RSI']) || 50,\n      supportLevel: parseFloat(video['Support Level']) || 0,\n      resistanceLevel: parseFloat(video['Resistance Level']) || 0,\n      videoUrl: video['YouTube URL'] || ''\n    };\n  }\n  allStocks[stock].count++;\n});\n\n// Score stocks\nconst scoredStocks = Object.values(allStocks).map(stock => {\n  const recommendationScore = \n    stock.recommendation === 'STRONG BUY' ? 5 :\n    stock.recommendation === 'BUY' ? 4 :\n    stock.recommendation === 'HOLD' ? 3 :\n    stock.recommendation === 'SELL' ? 2 : 1;\n  \n  const rsiScore = \n    stock.rsi > 70 ? 1 :\n    stock.rsi < 30 ? 5 :\n    stock.rsi > 60 ? 2 :\n    stock.rsi < 40 ? 4 : 3;\n  \n  const totalScore = recommendationScore * 0.6 + rsiScore * 0.4;\n  \n  return {\n    ...stock,\n    score: totalScore\n  };\n});\n\n// Sort by score\nscoredStocks.sort((a, b) => b.score - a.score);\n\n// Format current date for reporting\nconst reportDate = new Date().toLocaleDateString('en-US', {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric'\n});\n\nreturn {\n  reportTitle: `Market Mastery Weekly Report - ${reportDate}`,\n  reportDate: reportDate,\n  topPicks: scoredStocks.slice(0, 5),\n  contentTypeBreakdown: contentTypes,\n  videosAnalyzed: videos.length,\n  userName: 'onabellaabdullaziz',\n  channelName: 'Market Mastery Daily',\n  timestamp: '2025-05-17 21:51:51',\n  productType: 'weekly_report',\n  productId: `mmwr_${Date.now()}`,\n  price: 9.99\n};"
      },
      "id": "process-weekly-data",
      "name": "Process Weekly Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        600,
        840
      ]
    },
    {
      "parameters": {
        "url": "https://api.pdfgenerator.com/v3/generate",
        "method": "POST",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Auth-Key",
              "value": "YOUR_PDF_API_KEY"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyContent": "{\n  \"template\": \"weekly_market_report\",\n  \"data\": {\n    \"reportTitle\": \"{{ $json.reportTitle }}\",\n    \"reportDate\": \"{{ $json.reportDate }}\",\n    \"topPicks\": {{ JSON.stringify($json.topPicks) }},\n    \"marketOutlook\": {{ JSON.stringify($json.contentTypeBreakdown.market_outlook.slice(0, 1)) }},\n    \"channelName\": \"{{ $json.channelName }}\",\n    \"userName\": \"{{ $json.userName }}\",\n    \"videosAnalyzed\": {{ $json.videosAnalyzed }}\n  },\n  \"format\": \"pdf\",\n  \"output\": \"base64\"\n}",
        "options": {
          "response": {
            "responseFormat": "file",
            "outputPropertyName": "weeklyReport"
          }
        }
      },
      "id": "generate-weekly-pdf",
      "name": "Generate Weekly Report PDF",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        780,
        840
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "pdf-api-auth",
          "name": "PDF Generator API"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.gumroad.com/v2/products",
        "method": "POST",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyContent": "{\n  \"access_token\": \"YOUR_GUMROAD_TOKEN\",\n  \"name\": \"{{ $json.reportTitle }}\",\n  \"price\": {{ $json.price }},\n  \"description\": \"Weekly stock market analysis report with top 5 stock picks, market outlook, and detailed technical analysis. Get actionable insights for your investment decisions.\",\n  \"custom_permalink\": \"weekly-market-report-{{ $today.format('YYYY-MM-DD') }}\",\n  \"preview_url\": \"\"\n}",
        "options": {
          "response": {
            "responseFormat": "json",
            "outputPropertyName": "productCreationResponse"
          }
        }
      },
      "id": "create-gumroad-product",
      "name": "Create Gumroad Product",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        960,
        840
      ]
    },
    {
      "parameters": {
        "url": "https://api.gumroad.com/v2/products/{{ $json.productCreationResponse.product_id }}/variants",
        "method": "PUT",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyContent": "{\n  \"access_token\": \"YOUR_GUMROAD_TOKEN\",\n  \"variant\": {\n    \"title\": \"Standard Report\",\n    \"price\": {{ $json.price }}\n  }\n}",
        "options": {}
      },
      "id": "set-product-variant",
      "name": "Set Product Variant",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1140,
        840
      ]
    },
    {
      "parameters": {
        "url": "https://api.gumroad.com/v2/products/{{ $json.productCreationResponse.product_id }}/file_uploads",
        "method": "PUT",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "multipart/form-data"
            }
          ]
        },
        "sendBody": true,
        "bodyContentType": "formMultipart",
        "bodyParameters": {
          "parameters": [
            {
              "name": "access_token",
              "value": "YOUR_GUMROAD_TOKEN"
            },
            {
              "name": "file",
              "value": "={{ $json.weeklyReport }}"
            }
          ]
        },
        "options": {}
      },
      "id": "upload-pdf-to-product",
      "name": "Upload PDF to Gumroad",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1320,
        840
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Product Title",
              "value": "={{ $json.reportTitle }}"
            },
            {
              "name": "Date Created",
              "value": "={{ $json.timestamp }}"
            },
            {
              "name": "Product Type",
              "value": "={{ $json.productType }}"
            },
            {
              "name": "Product ID",
              "value": "={{ $json.productCreationResponse.product_id }}"
            },
            {
              "name": "Price",
              "value": "={{ $json.price }}"
            },
            {
              "name": "Sales URL",
              "value": "={{ $json.productCreationResponse.short_url }}"
            },
            {
              "name": "Top Stock Pick",
              "value": "={{ $json.topPicks[0].ticker }}"
            }
          ]
        },
        "options": {}
      },
      "id": "track-product-in-airtable",
      "name": "Track Digital Product",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 1,
      "position": [
        1500,
        840
      ],
      "credentials": {
        "airtableApi": {
          "id": "9",
          "name": "Airtable account"
        }
      }
    },
    {
      "parameters": {
        "recipient": "={{ $json.userName + \"@gmail.com\" }}",
        "subject": "Weekly Digital Product Created: {{ $json.reportTitle }}",
        "html":