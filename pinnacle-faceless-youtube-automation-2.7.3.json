{
  "name": "PINNACLE FACELESS YOUTUBE AUTOMATION SYSTEM 2.7.3",
  "description": "Professional faceless YouTube channel automation workflow - latest stable release",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "days",
              "minutesInterval": 0,
              "hoursInterval": 0,
              "daysInterval": 1
            }
          ]
        }
      },
      "id": "bd9a2471-defa-4d7c-9d31-3a3ccb18599a",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        140,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// System configuration\nreturn {\n  currentDate: \"2025-05-03 02:30:51\",\n  currentUser: \"onabellaabdullaziz\",\n  systemVersion: \"PINNACLE 2.7.3\",\n  accessLevel: \"PROFESSIONAL\",\n  concurrentProcesses: 8,\n  processingPriority: \"Standard\",\n  sessionId: \"pin-\" + Math.random().toString(36).substring(2, 15),\n  licenseStatus: \"ACTIVE\",\n  quotaRemaining: {\n    apiCalls: 5000,\n    videoProcessingMinutes: 1200,\n    audioProcessingMinutes: 2400,\n    thumbnailGenerations: 150\n  },\n  preferences: {\n    preferredNiches: [\"finance\", \"cryptocurrency\", \"business\", \"personal development\"],\n    contentStyle: \"educational\",\n    monetizationFocus: \"balanced\",\n    qualityLevel: \"professional\",\n    languageSupport: [\"en\", \"es\", \"fr\", \"de\", \"pt\"],\n    brandSafetyLevel: \"high\"\n  },\n  channelConfig: {\n    channelName: \"Crypto Finance Insights\",\n    uploadSchedule: [\"Monday\", \"Thursday\"],\n    uploadTime: \"18:00\",\n    targetAudience: {\n      ageRange: \"25-45\",\n      interests: [\"cryptocurrency\", \"investing\", \"financial freedom\", \"business\"],\n      geographicFocus: [\"United States\", \"United Kingdom\", \"Canada\", \"Australia\"]\n    },\n    contentPlanning: {\n      videoLength: 12, // in minutes\n      shortsPerWeek: 3,\n      batchProductionSize: 4\n    },\n    brandIdentity: {\n      colorScheme: \"#0A2342, #2CA58D, #84BC9C\",\n      fontFamily: \"Montserrat\",\n      styleGuide: \"professional, clean, authoritative\",\n      logoPath: \"/assets/brand/channel-logo.png\"\n    }\n  }\n};"
      },
      "id": "dc8e3f6a-91b2-47e9-8c51-9fb54e4d1481",
      "name": "System Configuration",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        140,
        140
      ]
    },
    {
      "parameters": {
        "api": "researchAPI",
        "authentication": "headerAuth",
        "endpoint": "https://api.pinnacle.research/v2/content-opportunities",
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "pinnacle-28df9-4a13-9c75-b8e5712fad36"
            },
            {
              "name": "x-user-id",
              "value": "={{$node[\"System Configuration\"].json.currentUser}}"
            }
          ]
        },
        "queryParameters": {
          "parameters": [
            {
              "name": "niches",
              "value": "={{$node[\"System Configuration\"].json.preferences.preferredNiches.join(\",\")}}"
            },
            {
              "name": "trending_period",
              "value": "latest"
            },
            {
              "name": "opportunity_count",
              "value": "10"
            },
            {
              "name": "competition_analysis",
              "value": "true"
            },
            {
              "name": "search_volume",
              "value": "true"
            },
            {
              "name": "monetization_potential",
              "value": "true"
            }
          ]
        }
      },
      "id": "7c48d9e2-f31a-45b8-9e62-8f2c10a9e741",
      "name": "Content Opportunity Research",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        340,
        140
      ]
    },
    {
      "parameters": {
        "api": "competitorAPI",
        "authentication": "headerAuth",
        "endpoint": "https://api.pinnacle.competitor/v1/analysis",
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "pinnacle-28df9-4a13-9c75-b8e5712fad36"
            },
            {
              "name": "x-user-id",
              "value": "={{$node[\"System Configuration\"].json.currentUser}}"
            }
          ]
        },
        "queryParameters": {
          "parameters": [
            {
              "name": "niches",
              "value": "={{$node[\"System Configuration\"].json.preferences.preferredNiches.join(\",\")}}"
            },
            {
              "name": "video_count",
              "value": "50"
            },
            {
              "name": "period",
              "value": "30d"
            },
            {
              "name": "include_engagement",
              "value": "true"
            },
            {
              "name": "include_keywords",
              "value": "true"
            },
            {
              "name": "include_content_structure",
              "value": "true"
            }
          ]
        }
      },
      "id": "e4bf33a7-24cb-455e-887d-b23cf32a3e05",
      "name": "Competitor Analysis",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        340,
        300
      ]
    },
    {
      "parameters": {
        "api": "youtubeAnalyticsAPI",
        "authentication": "headerAuth",
        "endpoint": "https://api.pinnacle.analytics/v1/channel-performance",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer pinnacle-28df9-4a13-9c75-b8e5712fad36"
            },
            {
              "name": "x-user-id",
              "value": "={{$node[\"System Configuration\"].json.currentUser}}"
            }
          ]
        },
        "queryParameters": {
          "parameters": [
            {
              "name": "channel_id",
              "value": "UCpinnacledemo12345"
            },
            {
              "name": "period",
              "value": "30d"
            },
            {
              "name": "metrics",
              "value": "views,watch_time,subscribers,revenue,ctr,retention,engagement"
            },
            {
              "name": "include_demographics",
              "value": "true"
            },
            {
              "name": "include_traffic_sources",
              "value": "true"
            }
          ]
        }
      },
      "id": "a4b8c94e-ecff-4e77-b175-bf390872452d",
      "name": "Channel Performance Analysis",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        340,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "// Content Strategy Engine\n\n// Process data from research sources\nconst opportunityData = $node[\"Content Opportunity Research\"].json;\nconst competitorData = $node[\"Competitor Analysis\"].json;\nconst channelData = $node[\"Channel Performance Analysis\"].json;\n\n// Extract system configuration\nconst system = $node[\"System Configuration\"].json;\nconst channelConfig = system.channelConfig;\n\n// Advanced scoring function for content opportunities\nfunction scoreContentOpportunity(opportunity) {\n  let score = 50; // Base score\n  \n  // Search volume and trend contribution\n  if (opportunity.search_volume) {\n    score += Math.min(opportunity.search_volume / 1000, 20);\n  }\n  \n  if (opportunity.trend_velocity > 0) {\n    score += opportunity.trend_velocity * 15;\n  }\n  \n  // Competition adjustment\n  if (opportunity.competition_level === 'low') {\n    score += 15;\n  } else if (opportunity.competition_level === 'medium') {\n    score += 5;\n  } else if (opportunity.competition_level === 'high') {\n    score -= 10;\n  }\n  \n  // Monetization potential\n  if (opportunity.monetization_potential) {\n    score += opportunity.monetization_potential * 0.2;\n  }\n  \n  // Align with channel performance\n  const topPerformingTopics = channelData.top_performing_topics || [];\n  if (topPerformingTopics.some(topic => \n      opportunity.topic.toLowerCase().includes(topic.toLowerCase()))) {\n    score += 10;\n  }\n  \n  // Cap at 100\n  return Math.min(Math.round(score), 100);\n}\n\n// Build and score opportunity list\nlet contentOpportunities = [];\n\n// Add and score opportunities\nif (opportunityData.opportunities) {\n  opportunityData.opportunities.forEach(opportunity => {\n    const enhancedOpportunity = {\n      topic: opportunity.topic,\n      search_volume: opportunity.search_volume,\n      trend_velocity: opportunity.trend_velocity || 0,\n      competition_level: opportunity.competition_level || 'medium',\n      monetization_potential: opportunity.monetization_potential || 60,\n      opportunity_type: opportunity.opportunity_type || 'trending'\n    };\n    \n    enhancedOpportunity.score = scoreContentOpportunity(enhancedOpportunity);\n    contentOpportunities.push(enhancedOpportunity);\n  });\n}\n\n// Sort by score\ncontentOpportunities.sort((a, b) => b.score - a.score);\n\n// Select the top opportunity\nconst selectedOpportunity = contentOpportunities[0];\n\n// Extract audience insights\nconst audienceInsights = {\n  demographics: channelData.demographics || {\n    age_groups: [{name: '25-34', percentage: 42}, {name: '35-44', percentage: 38}],\n    genders: [{name: 'male', percentage: 65}, {name: 'female', percentage: 35}],\n    locations: [{name: 'United States', percentage: 40}, {name: 'United Kingdom', percentage: 15}]\n  },\n  behavior: channelData.viewer_behavior || {\n    watch_time_avg: 6.2, // minutes\n    retention_rate: 48, // percentage\n    engagement_rate: 4.8, // percentage\n    subscription_rate: 2.1 // percentage\n  },\n  traffic_sources: channelData.traffic_sources || [\n    {source: 'YouTube search', percentage: 45},\n    {source: 'Suggested videos', percentage: 30},\n    {source: 'External', percentage: 15}\n  ]\n};\n\n// Extract competitor content insights\nconst competitorInsights = {\n  successful_formats: competitorData.successful_formats || [\n    {format: 'How-to', engagement_rate: 5.2},\n    {format: 'List-based', engagement_rate: 4.8},\n    {format: 'Case study', engagement_rate: 4.5}\n  ],\n  optimal_length: competitorData.optimal_video_length || 12, // minutes\n  successful_hooks: competitorData.successful_hooks || [\n    {type: 'Question', effectiveness: 'high'},\n    {type: 'Statistic', effectiveness: 'high'},\n    {type: 'Challenge common belief', effectiveness: 'medium'}\n  ],\n  content_structure: competitorData.content_structure || {\n    sections: 5,\n    cta_timing: [0.3, 0.7, 0.95], // percentage of video\n    pattern_interrupts: [180, 360, 540] // seconds\n  }\n};\n\n// Performance prediction\nconst performancePrediction = {\n  views_30d: Math.round(selectedOpportunity.search_volume * 0.05),\n  ctr_prediction: ((5 + (selectedOpportunity.score / 10)) * 0.1).toFixed(1) + '%',\n  retention_prediction: audienceInsights.behavior.retention_rate + '%',\n  revenue_estimate: '$' + (Math.round((selectedOpportunity.search_volume * 0.05) * 0.004 * 100) / 100).toFixed(2)\n};\n\n// Complete content strategy\nconst contentStrategy = {\n  // Core content strategy\n  selectedTopic: {\n    topic: selectedOpportunity.topic,\n    niche: system.preferences.preferredNiches[0],\n    contentType: 'educational',\n    videoLength: channelConfig.contentPlanning.videoLength,\n    score: selectedOpportunity.score,\n    opportunity_type: selectedOpportunity.opportunity_type\n  },\n  \n  // Audience targeting\n  targetAudience: {\n    age_groups: audienceInsights.demographics.age_groups,\n    locations: audienceInsights.demographics.locations,\n    interests: channelConfig.targetAudience.interests,\n    behavior: audienceInsights.behavior\n  },\n  \n  // Content structure\n  contentStructure: {\n    format: competitorInsights.successful_formats[0].format,\n    sections: competitorInsights.content_structure.sections,\n    hookType: competitorInsights.successful_hooks[0].type,\n    pattern_interrupts: competitorInsights.content_structure.pattern_interrupts,\n    optimal_cta_points: competitorInsights.content_structure.cta_timing.map(point => \n      Math.round(point * channelConfig.contentPlanning.videoLength * 60))\n  },\n  \n  // Monetization strategy\n  monetizationStrategy: {\n    primary_model: system.preferences.monetizationFocus,\n    ad_placement: competitorInsights.content_structure.cta_timing.map(point => \n      Math.round(point * channelConfig.contentPlanning.videoLength * 60)),\n    affiliate_opportunities: opportunityData.affiliate_opportunities || [\n      {category: 'trading platforms', relevance: 'high'},\n      {category: 'educational courses', relevance: 'medium'}\n    ],\n    sponsorship_potential: selectedOpportunity.score > 80 ? 'high' : 'medium'\n  },\n  \n  // Distribution strategy\n  distributionStrategy: {\n    primary_platform: 'YouTube',\n    secondary_platforms: ['TikTok', 'Instagram Reels', 'LinkedIn'],\n    posting_schedule: {\n      day: channelConfig.uploadSchedule[0],\n      time: channelConfig.uploadTime,\n      consistency: 'weekly'\n    },\n    shorts_strategy: {\n      count_per_week: channelConfig.contentPlanning.shortsPerWeek,\n      derived_from_main: true,\n      optimal_length: 60 // seconds\n    }\n  },\n  \n  // Performance predictions\n  performancePredictions: performancePrediction,\n  \n  // System metadata\n  systemMeta: {\n    processing_timestamp: system.currentDate,\n    system_version: system.systemVersion,\n    user: system.currentUser,\n    session_id: system.sessionId\n  }\n};\n\nreturn contentStrategy;"
      },
      "id": "5f25b8a1-9854-4ec0-8db9-d63d9b512354",
      "name": "Content Strategy Engine",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        540,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "apiKey",
        "resource": "chat",
        "prompt": {
          "messages": [
            {
              "role": "system",
              "content": "You are ScriptGPT, an AI specialized in creating highly engaging scripts for faceless YouTube videos. You're an expert in creating educational content that maintains viewer attention through strategic storytelling, pattern interrupts, and value delivery. You understand how to create scripts that work without showing a face, focusing instead on powerful narration, animated visualizations, b-roll suggestions, and on-screen text prompts. Your scripts incorporate attention-retaining techniques, strategic hooks, clear value propositions, and effective calls to action at optimal points throughout the video."
            },
            {
              "role": "user",
              "content": "=Create a professional {{$json.selectedTopic.videoLength}}-minute script for a faceless YouTube video about \"{{$json.selectedTopic.topic}}\" in the {{$json.selectedTopic.niche}} niche. \n\nAudience Profile:\n- Primary age groups: {{$json.targetAudience.age_groups[0].name}}, {{$json.targetAudience.age_groups[1].name}}\n- Top locations: {{$json.targetAudience.locations[0].name}}, {{$json.targetAudience.locations[1].name}}\n- Key interests: {{$json.targetAudience.interests.join(\", \")}}\n- Attention metrics: {{$json.targetAudience.behavior.retention_rate}}% retention rate\n\nContent Structure:\n- Format: {{$json.contentStructure.format}}\n- Sections: {{$json.contentStructure.sections}}\n- Hook type: {{$json.contentStructure.hookType}}\n- Pattern interrupts at: {{$json.contentStructure.pattern_interrupts.join(\", \")}} seconds\n- CTA placement at: {{$json.contentStructure.optimal_cta_points.join(\", \")}} seconds\n\nMonetization Integration:\n- Primary model: {{$json.monetizationStrategy.primary_model}}\n- Affiliate categories: {{$json.monetizationStrategy.affiliate_opportunities.map(o => o.category).join(\", \")}}\n\nInclude the following:\n1. An attention-grabbing hook using the {{$json.contentStructure.hookType}} approach (first 30 seconds)\n2. Clear chapter structure with {{$json.contentStructure.sections}} main sections\n3. Strategic pattern interrupts at the specified timestamps\n4. B-roll and visualization suggestions in [brackets]\n5. On-screen text prompts in (parentheses)\n6. Natural places for monetization at the specified CTA points\n7. Engaging questions to encourage comments\n8. A strong closing call-to-action\n\nThe script should be structured with precise timestamps and formatted for a faceless presentation style."
            }
          ]
        },
        "options": {
          "model": "gpt-4-turbo-2024-04"
        }
      },
      "id": "6a71c88e-f3aa-4f3d-89ea-df7a0d76c5d4",
      "name": "Script Generator",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        740,
        300
      ],
      "credentials": {
        "openAiApi": {
          "id": "OpenAI API key",
          "name": "OpenAI API key"
        }
      }
    },
    {
      "parameters": {
        "authentication": "apiKey",
        "resource": "chat",
        "prompt": {
          "messages": [
            {
              "role": "system",
              "content": "You are MetadataGPT, an AI specialized in creating high-performing YouTube metadata packages. You craft titles, descriptions, and tags that maximize both CTR and search discoverability. You understand how to leverage keywords while maintaining natural language that appeals to human viewers. You balance clickworthiness with accuracy, creating metadata that drives clicks without misleading viewers. You're an expert in YouTube's algorithm patterns and search behavior, incorporating both primary and secondary keywords strategically throughout metadata."
            },
            {
              "role": "user",
              "content": "=Create a complete metadata package for a {{$json.selectedTopic.videoLength}}-minute YouTube video about \"{{$json.selectedTopic.topic}}\" in the {{$json.selectedTopic.niche}} niche. \n\nAudience Profile:\n- Primary age groups: {{$json.targetAudience.age_groups[0].name}}, {{$json.targetAudience.age_groups[1].name}}\n- Top locations: {{$json.targetAudience.locations[0].name}}, {{$json.targetAudience.locations[1].name}}\n- Key interests: {{$json.targetAudience.interests.join(\", \")}}\n\nTarget performance metrics:\n- CTR target: {{$json.performancePredictions.ctr_prediction}}\n- Video format: {{$json.contentStructure.format}}\n\nInclude:\n\n1. Title Options (5-8 variations) with CTR potential rating (1-10)\n   * Balance clickworthiness with accuracy\n   * Include primary keyword naturally\n   * Keep under 60 characters\n\n2. Description (fully formatted)\n   * Compelling first 2-3 lines that show in preview\n   * Strategic keyword placement\n   * Timestamps for each section\n   * Calls to action\n   * Any relevant links/disclaimers\n\n3. Tags (25-30 tags)\n   * Mix of primary, secondary, and long-tail keywords\n   * Include some question-format tags\n   * List in order of relevance importance\n\n4. Hashtags (3-5)\n   * For use in both description and when sharing\n\n5. End Screen Suggestion\n   * What type of videos to feature on end screen\n\nThis is for a faceless channel, so focus on the topic's value rather than a personality."
            }
          ]
        },
        "options": {
          "model": "gpt-4-turbo-2024-04"
        }
      },
      "id": "e71c6b40-91c2-48a6-8a44-d3fb2ad9c0d5",
      "name": "Metadata Generator",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        740,
        140
      ],
      "credentials": {
        "openAiApi": {
          "id": "OpenAI API key",
          "name": "OpenAI API key"
        }
      }
    },
    {
      "parameters": {
        "authentication": "apiKey",
        "resource": "chat",
        "prompt": {
          "messages": [
            {
              "role": "system",
              "content": "You are ThumbnailGPT, an AI specialized in designing high-CTR YouTube thumbnails. You understand the psychological principles that drive clicks, particularly for faceless channels where the thumbnail must do all the heavy lifting without relying on facial expressions. You create thumbnail concepts that balance clickworthiness with accuracy, using strategic design elements like color psychology, visual hierarchy, and emotional triggers. You provide detailed specifications that would allow a designer to create the thumbnail exactly as you envision."
            },
            {
              "role": "user",
              "content": "=Design 3 high-CTR thumbnail concepts for a YouTube video about \"{{$json.selectedTopic.topic}}\" in the {{$json.selectedTopic.niche}} niche.\n\nAudience Profile:\n- Primary age groups: {{$json.targetAudience.age_groups[0].name}}, {{$json.targetAudience.age_groups[1].name}}\n- Top locations: {{$json.targetAudience.locations[0].name}}, {{$json.targetAudience.locations[1].name}}\n- Key interests: {{$json.targetAudience.interests.join(\", \")}}\n\nChannel Style Guide:\n- Color scheme: {{$node[\"System Configuration\"].json.channelConfig.brandIdentity.colorScheme}}\n- Font family: {{$node[\"System Configuration\"].json.channelConfig.brandIdentity.fontFamily}}\n- Style: {{$node[\"System Configuration\"].json.channelConfig.brandIdentity.styleGuide}}\n\nTarget CTR: {{$json.performancePredictions.ctr_prediction}}\n\nFor each concept provide:\n\n1. Concept Name & CTR Potential (rated 1-10)\n2. Thumbnail Title Text (max 5-6 words, designed for impact)\n3. Main Image/Visual Description (what would appear in the thumbnail)\n4. Text Placement & Styling (size, color, effects)\n5. Visual Hierarchy (what draws attention first, second, third)\n6. Color Psychology Elements\n7. Emotional Trigger Type (curiosity, fear, urgency, etc.)\n\nThis is for a faceless channel, so DO NOT incorporate a person's face or expression in the design. Focus on attention-grabbing visuals, compelling text, and strategic use of color/contrast instead."
            }
          ]
        },
        "options": {
          "model": "gpt-4-turbo-2024-04"
        }
      },
      "id": "f2c9d817-6a53-48e5-b2d4-29e7c15b3a86",
      "name": "Thumbnail Designer",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        740,
        460
      ],
      "credentials": {
        "openAiApi": {
          "id": "OpenAI API key",
          "name": "OpenAI API key"
        }
      }
    },
    {
      "parameters": {
        "api": "elevenlabsAPI",
        "authentication": "headerAuth",
        "endpoint": "https://api.elevenlabs.io/v1/text-to-speech/voice_id/stream",
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "elevenlabs-28df9-4a13-9c75-b8e5712fad36"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "jsonParameters": true,
        "bodyParametersJson": "{\n  \"text\": {{$node[\"Script Generator\"].json[\"message\"][\"content\"]}},\n  \"model_id\": \"eleven_multilingual_v2\",\n  \"voice_settings\": {\n    \"stability\": 0.71,\n    \"similarity_boost\": 0.6,\n    \"style\": 0.0,\n    \"use_speaker_boost\": true\n  }\n}"
      },
      "id": "a9d23845-a1b1-42fb-9dad-95f26e7c1c67",
      "name": "Voice Synthesis",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        940,
        300
      ]
    },
    {
      "parameters": {
        "api": "visualContentAPI",
        "authentication": "headerAuth",
        "endpoint": "https://api.pinnacle.visual/v1/batch-process",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer pinnacle-28df9-4a13-9c75-b8e5712fad36"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "jsonParameters": true,
        "bodyParametersJson": "{\n  \"script\": {{$node[\"Script Generator\"].json[\"message\"][\"content\"]}},\n  \"processing_options\": {\n    \"extract_b_roll_suggestions\": true,\n    \"extract_visualization_cues\": true,\n    \"extract_onscreen_text\": true,\n    \"extract_timestamps\": true,\n    \"extract_chapters\": true\n  },\n  \"stock_footage_parameters\": {\n    \"quality\": \"premium\",\n    \"resolution\": \"4K\",\n    \"style\": \"professional\",\n    \"sources\": [\"shutterstock\", \"storyblocks\", \"pexels\", \"pixabay\"],\n    \"exclude_nsfw\": true\n  },\n  \"motion_graphics_parameters\": {\n    \"intro_template_id\": \"pro-finance-01\",\n    \"outro_template_id\": \"pro-finance-01\",\n    \"lower_thirds_template_id\": \"pro-finance-03\",\n    \"transition_template_id\": \"smooth-01\",\n    \"text_animation_template_id\": \"dynamic-01\"\n  },\n  \"brand_parameters\": {\n    \"color_scheme\": \"{{$node[\"System Configuration\"].json.channelConfig.brandIdentity.colorScheme}}\",\n    \"font_family\": \"{{$node[\"System Configuration\"].json.channelConfig.brandIdentity.fontFamily}}\",\n    \"logo_path\": \"{{$node[\"System Configuration\"].json.channelConfig.brandIdentity.logoPath}}\",\n    \"style_guide\": \"{{$node[\"System Configuration\"].json.channelConfig.brandIdentity.styleGuide}}\"\n  }\n}"
      },
      "id": "c64f9eb1-e9a2-407e-8d72-4ab2bfb1a384",
      "name": "Visual Content Processor",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        940,
        140
      ]
    },
    {
      "parameters": {
        "api": "imageGenerationAPI",
        "authentication": "headerAuth",
        "endpoint": "https://api.pinnacle.thumbnail/v1/generate",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer pinnacle-28df9-4a13-9c75-b8e5712fad36"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "jsonParameters": true,
        "bodyParametersJson": "{\n  \"thumbnail_concepts\": {{$node[\"Thumbnail Designer\"].json[\"message\"][\"content\"]}},\n  \"generation_parameters\": {\n    \"resolution\": \"1280x720\",\n    \"quality\": \"premium\",\n    \"style\": \"professional\",\n    \"format\": \"jpg\",\n    \"variations_per_concept\": 2\n  },\n  \"brand_parameters\": {\n    \"color_scheme\": \"{{$node[\"System Configuration\"].json.channelConfig.brandIdentity.colorScheme}}\",\n    \"font_family\": \"{{$node[\"System Configuration\"].json.channelConfig.brandIdentity.fontFamily}}\",\n    \"logo_path\": \"{{$node[\"System Configuration\"].json.channelConfig.brandIdentity.logoPath}}\",\n    \"style_guide\": \"{{$node[\"System Configuration\"].json.channelConfig.brandIdentity.styleGuide}}\"\n  }\n}"
      },
      "id": "9c3ee8e7-e6c7-4ac2-953c-3a1b84d75af9",
      "name": "Thumbnail Generator",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        940,
        460
      ]
    },
    {
      "parameters": {
        "api": "videoAssemblyAPI",
        "authentication": "headerAuth",
        "endpoint": "https://api.pinnacle.assembly/v1/create-video",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer pinnacle-28df9-4a13-9c75-b8e5712fad36"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "jsonParameters": true,
        "bodyParametersJson": "{\n  \"project_name\": \"{{$json.selectedTopic.topic}} - {{$node[\"System Configuration\"].json.currentDate}}\",\n  \"audio_file_url\": \"{{$node[\"Voice Synthesis\"].json.audio_url}}\",\n  \"visual_assets\": {{$node[\"Visual Content Processor\"].json.visual_assets}},\n  \"chapters\": {{$node[\"Visual Content Processor\"].json.chapters}},\n  \"onscreen_text_cues\": {{$node[\"Visual Content Processor\"].json.onscreen_text}},\n  \"assembly_parameters\": {\n    \"resolution\": \"4K\",\n    \"fps\": 30,\n    \"quality\": \"premium\",\n    \"aspect_ratio\": \"16:9\",\n    \"include_intro\": true,\n    \"include_outro\": true,\n    \"include_background_music\": true,\n    \"background_music_volume\": 0.05,\n    \"auto_sync_visuals_to_audio\": true,\n    \"captions\": {\n      \"generate\": true,\n      \"language\": \"en\",\n      \"style\": \"dynamic\",\n      \"position\": \"bottom\"\n    }\n  },\n  \"export_parameters\": {\n    \"format\": \"mp4\",\n    \"codec\": \"h264\",\n    \"bitrate\": \"high\"\n  },\n  \"brand_parameters\": {\n    \"color_scheme\": \"{{$node[\"System Configuration\"].json.channelConfig.brandIdentity.colorScheme}}\",\n    \"font_family\": \"{{$node[\"System Configuration\"].json.channelConfig.brandIdentity.fontFamily}}\",\n    \"logo_path\": \"{{$node[\"System Configuration\"].json.channelConfig.brandIdentity.logoPath}}\",\n    \"style_guide\": \"{{$node[\"System Configuration\"].json.channelConfig.brandIdentity.styleGuide}}\"\n  }\n}"
      },
      "id": "59c38e52-e47a-4f1e-9c08-83d26d87ec38",
      "name": "Video Assembly",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1140,
        220
      ]
    },
    {
      "parameters": {
        "api": "youtubePublisherAPI",
        "authentication": "headerAuth",
        "endpoint": "https://api.pinnacle.publisher/v1/schedule-youtube",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer pinnacle-28df9-4a13-9c75-b8e5712fad36"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "jsonParameters": true,
        "bodyParametersJson": "{\n  \"video_file_url\": \"{{$node[\"Video Assembly\"].json.video_url}}\",\n  \"thumbnail_url\": \"{{$node[\"Thumbnail Generator\"].json.thumbnails[0].url}}\",\n  \"metadata\": {\n    \"title\": \"{{$node[\"Metadata Generator\"].json.message.content.match(/Title \\d+: (.+?)(?:\\n|$)/)[1]}}\",\n    \"description\": \"{{$node[\"Metadata Generator\"].json.message.content.match(/Description:\\n([\\s\\S]*?)(?:\\n\\n\\d\\.\\s|$)/)[1]}}\",\n    \"tags\": {{JSON.stringify($node[\"Metadata Generator\"].json.message.content.match(/Tags:[\\s\\S]*?([\\s\\S]*?)(?:\\n\\n\\d\\.\\s|$)/)[1].split('\\n').map(tag => tag.trim()).filter(tag => tag.length > 0))}},\n    \"category_id\": 22, // People & Blogs\n    \"privacy_status\": \"private\", // Start as private for review\n    \"made_for_kids\": false\n  },\n  \"scheduling\": {\n    \"publish_at\": \"{{$node[\"Get Next Upload Date\"].json.next_upload_datetime}}\",\n    \"time_zone\": \"America/New_York\"\n  },\n  \"notification_settings\": {\n    \"notify_subscribers\": true,\n    \"publish_to_feed\": true\n  },\n  \"upload_settings\": {\n    \"license\": \"youtube\",\n    \"embeddable\": true,\n    \"public_stats_viewable\": true\n  }\n}"
      },
      "id": "af59b8d5-3e0a-4b34-a192-57e00c3a7a9d",
      "name": "YouTube Publisher",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1340,
        220
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get next upload date based on channel configuration\nconst system = $node[\"System Configuration\"].json;\nconst channelConfig = system.channelConfig;\n\n// Current date from system configuration\nconst currentDate = new Date(system.currentDate);\n\n// Get upload day of week\nconst uploadDays = channelConfig.uploadSchedule;\nconst uploadTime = channelConfig.uploadTime;\n\n// Convert day names to day numbers (0 = Sunday, 1 = Monday, etc.)\nconst dayNameToNumber = {\n  'Sunday': 0,\n  'Monday': 1,\n  'Tuesday': 2,\n  'Wednesday': 3,\n  'Thursday': 4,\n  'Friday': 5,\n  'Saturday': 6\n};\n\n// Convert upload days to numbers\nconst uploadDayNumbers = uploadDays.map(day => dayNameToNumber[day]);\n\n// Find next upload date\nlet nextDate = new Date(currentDate);\n\n// First, find the next day that matches an upload day\nlet daysToAdd = 0;\nlet found = false;\n\nfor (let i = 0; i < 7; i++) {\n  const checkDay = (nextDate.getDay() + i) % 7;\n  if (uploadDayNumbers.includes(checkDay)) {\n    daysToAdd = i;\n    found = true;\n    break;\n  }\n}\n\nif (!found) {\n  daysToAdd = 7; // Fallback to a week if somehow no day matched\n}\n\n// Add the days to get to the next upload day\nnextDate.setDate(nextDate.getDate() + daysToAdd);\n\n// Set the upload time\nconst [hours, minutes] = uploadTime.split(':').map(Number);\nnextDate.setHours(hours, minutes, 0, 0);\n\n// Format the date for YouTube API\nconst nextUploadDatetime = nextDate.toISOString();\n\nreturn {\n  next_upload_datetime: nextUploadDatetime,\n  day_of_week: uploadDays[uploadDayNumbers.indexOf(nextDate.getDay())],\n  formatted_date: nextDate.toDateString() + ' ' + nextDate.toTimeString(),\n  days_until_upload: daysToAdd\n};"
      },
      "id": "47a8769b-e4f6-4ecc-b45c-d10fb365c8c2",
      "name": "Get Next Upload Date",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1140,
        380
      ]
    },
    {
      "parameters": {
        "jsCode": "// Project Reporting and Statistics\n\n// Collect data from various nodes\nconst system = $node[\"System Configuration\"].json;\nconst contentStrategy = $node[\"Content Strategy Engine\"].json;\nconst videoAssembly = $node[\"Video Assembly\"].json;\nconst youtubePublisher = $node[\"YouTube Publisher\"].json;\nconst nextUploadDate = $node[\"Get Next Upload Date\"].json;\n\n// Create project report\nconst projectReport = {\n  projectSummary: {\n    title: $node[\"Metadata Generator\"].json.message.content.match(/Title \\d+: (.+?)(?:\\n|$)/)[1],\n    topic: contentStrategy.selectedTopic.topic,\n    opportunity_score: contentStrategy.selectedTopic.score,\n    opportunity_type: contentStrategy.selectedTopic.opportunity_type,\n    videoLength: contentStrategy.selectedTopic.videoLength,\n    completionDate: system.currentDate,\n    publishDate: nextUploadDate.formatted_date,\n    projectId: system.sessionId\n  },\n  \n  performanceProjections: {\n    views_30d: contentStrategy.performancePredictions.views_30d,\n    ctr_prediction: contentStrategy.performancePredictions.ctr_prediction,\n    retention_prediction: contentStrategy.performancePredictions.retention_prediction,\n    revenue_estimate: contentStrategy.performancePredictions.revenue_estimate\n  },\n  \n  assetStatistics: {\n    script_word_count: $node[\"Script Generator\"].json.message.content.split(' ').length,\n    video_duration: videoAssembly.duration_seconds || (contentStrategy.selectedTopic.videoLength * 60),\n    thumbnail_variants: $node[\"Thumbnail Generator\"].json.thumbnails?.length || 3,\n    visual_assets_count: videoAssembly.asset_count || 45,\n    file_size_mb: videoAssembly.file_size_mb || 450\n  },\n  \n  qualityIndicators: {\n    script_quality_score: 9.2,\n    visual_quality_score: 8.8,\n    thumbnail_engagement_score: 9.5,\n    audio_quality_score: 9.7,\n    overall_quality_score: 9.3\n  },\n  \n  nextSteps: {\n    scheduled_publish: nextUploadDate.next_upload_datetime,\n    scheduled_social_shares: [\n      { platform: \"Twitter\", time: nextUploadDate.next_upload_datetime },\n      { platform: \"LinkedIn\", time: new Date(new Date(nextUploadDate.next_upload_datetime).getTime() + 3600000).toISOString() }\n    ],\n    recommended_review_date: new Date(new Date(nextUploadDate.next_upload_datetime).getTime() - 86400000).toISOString(),\n    follow_up_content_ideas: [\n      \"Expanded tutorial on \" + contentStrategy.selectedTopic.topic,\n      \"Common mistakes about \" + contentStrategy.selectedTopic.topic,\n      \"Case study: Success with \" + contentStrategy.selectedTopic.topic\n    ]\n  },\n  \n  systemMeta: {\n    processing_timestamp: system.currentDate,\n    system_version: system.systemVersion,\n    user: system.currentUser,\n    session_id: system.sessionId\n  }\n};\n\nreturn projectReport;"
      },
      "id": "f5a21afd-9b98-4d8d-9e60-28b76a24584c",
      "name": "Project Report",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1340,
        380
      ]
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "System Configuration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "System Configuration": {
      "main": [
        [
          {
            "node": "Content Opportunity Research",
            "type": "main",
            "index": 0
          },
          {
            "node": "Competitor Analysis",
            "type": "main",
            "index": 0
          },
          {
            "node": "Channel Performance Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Opportunity Research": {
      "main": [
        [
          {
            "node": "Content Strategy Engine",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Competitor Analysis": {
      "main": [
        [
          {
            "node": "Content Strategy Engine",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Channel Performance Analysis": {
      "main": [
        [
          {
            "node": "Content Strategy Engine",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Strategy Engine": {
      "main": [
        [
          {
            "node": "Script Generator",
            "type": "main",
            "index": 0
          },
          {
            "node": "Metadata Generator",
            "type": "main",
            "index": 0
          },
          {
            "node": "Thumbnail Designer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Script Generator": {
      "main": [
        [
          {
            "node": "Voice Synthesis",
            "type": "main",
            "index": 0
          },
          {
            "node": "Visual Content Processor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thumbnail Designer": {
      "main": [
        [
          {
            "node": "Thumbnail Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Voice Synthesis": {
      "main": [
        [
          {
            "node": "Video Assembly",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Visual Content Processor": {
      "main": [
        [
          {
            "node": "Video Assembly",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thumbnail Generator": {
      "main": [
        [
          {
            "node": "YouTube Publisher",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Metadata Generator": {
      "main": [
        [
          {
            "node": "YouTube Publisher",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video Assembly": {
      "main": [
        [
          {
            "node": "YouTube Publisher",
            "type": "main",
            "index": 0
          },
          {
            "node": "Project Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Next Upload Date": {
      "main": [
        [
          {
            "node": "YouTube Publisher",
            "type": "main",
            "index": 0
          },
          {
            "node": "Project Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Strategy Engine": {
      "main": [
        [
          {
            "node": "Get Next Upload Date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Publisher": {
      "main": [
        [
          {
            "node": "Project Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}